{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.19.5.34762",
      "templateHash": "11583260499197554470"
    }
  },
  "parameters": {
    "Azure_Search_Name": {
      "type": "string",
      "defaultValue": "[format('cog-search-{0}', uniqueString(resourceGroup().id))]",
      "maxLength": 60,
      "minLength": 2,
      "metadata": {
        "description": "Optional. Service name must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 60 characters in length."
      }
    },
    "Azure_Search_SKU": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3",
        "storage_optimized_l1",
        "storage_optimized_l2"
      ],
      "metadata": {
        "description": "Optional, defaults to standard. The pricing tier of the search service you want to create (for example, basic or standard)."
      }
    },
    "Azure_Search_replicaCount": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 12,
      "minValue": 1,
      "metadata": {
        "description": "Optional, defaults to 1. Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier). Must be between 1 and 12."
      }
    },
    "Azure_Search_partitionCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        3,
        4,
        6,
        12
      ],
      "metadata": {
        "description": "Optional, defaults to 1. Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units. Allowed values: 1, 2, 3, 4, 6, 12."
      }
    },
    "Azure_Search_hostingMode": {
      "type": "string",
      "defaultValue": "default",
      "allowedValues": [
        "default",
        "highDensity"
      ],
      "metadata": {
        "description": "Optional, defaults to default. Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
      }
    },
    "Cognitive_Service_Name": {
      "type": "string",
      "defaultValue": "[format('cognitive-service-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of our application. It has to be unique. Type a name followed by your resource group name. (<name>-<resourceGroupName>)"
      }
    },
    "SQLserver_Name": {
      "type": "string",
      "defaultValue": "[format('sql-server-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of the SQL logical server."
      }
    },
    "SQLDB_Name": {
      "type": "string",
      "defaultValue": "SampleDB",
      "metadata": {
        "description": "Optional. The name of the SQL Database."
      }
    },
    "SQLadministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "Required. The administrator username of the SQL logical server."
      }
    },
    "SQLadministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The administrator password of the SQL logical server."
      }
    },
    "Bing_Search_API_Name": {
      "type": "string",
      "defaultValue": "[format('bing-search-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of the Bing Search API service"
      }
    },
    "Cosmos_Account_Name": {
      "type": "string",
      "defaultValue": "[format('cosmosdb-account-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. Cosmos DB account name, max length 44 characters, lowercase"
      }
    },
    "Cosmos_Database_Name": {
      "type": "string",
      "defaultValue": "[format('cosmosdb-db-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name for the CosmosDB database"
      }
    },
    "Cosmos_Container_Name": {
      "type": "string",
      "defaultValue": "[format('cosmosdb-container-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name for the CosmosDB database container"
      }
    },
    "resourcesLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional, defaults to resource group location. The location of the resources."
      }
    }
  },
  "variables": {
    "Cognitive_Service_SKU": "S0"
  },
  "resources": [
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2021-04-01-preview",
      "name": "[parameters('Azure_Search_Name')]",
      "location": "[parameters('resourcesLocation')]",
      "sku": {
        "name": "[parameters('Azure_Search_SKU')]"
      },
      "properties": {
        "replicaCount": "[parameters('Azure_Search_replicaCount')]",
        "partitionCount": "[parameters('Azure_Search_partitionCount')]",
        "hostingMode": "[parameters('Azure_Search_hostingMode')]",
        "semanticSearch": "free"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('Cognitive_Service_Name')]",
      "location": "[parameters('resourcesLocation')]",
      "sku": {
        "name": "[variables('Cognitive_Service_SKU')]"
      },
      "kind": "CognitiveServices",
      "properties": {
        "apiProperties": {
          "statisticsEnabled": false
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-11-01-preview",
      "name": "[parameters('SQLserver_Name')]",
      "location": "[parameters('resourcesLocation')]",
      "properties": {
        "administratorLogin": "[parameters('SQLadministratorLogin')]",
        "administratorLoginPassword": "[parameters('SQLadministratorLoginPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-11-01-preview",
      "name": "[format('{0}/{1}', parameters('SQLserver_Name'), parameters('SQLDB_Name'))]",
      "location": "[parameters('resourcesLocation')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('SQLserver_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2022-11-01-preview",
      "name": "[format('{0}/{1}', parameters('SQLserver_Name'), 'AllowAllAzureIPs')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('SQLserver_Name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('Cosmos_Account_Name')]",
      "location": "[parameters('resourcesLocation')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('resourcesLocation')]"
          }
        ],
        "enableFreeTier": false,
        "isVirtualNetworkFilterEnabled": false,
        "publicNetworkAccess": "Enabled",
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', parameters('Cosmos_Account_Name'), parameters('Cosmos_Database_Name'))]",
      "location": "[parameters('resourcesLocation')]",
      "properties": {
        "resource": {
          "id": "[parameters('Cosmos_Database_Name')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos_Account_Name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', parameters('Cosmos_Account_Name'), parameters('Cosmos_Database_Name'), parameters('Cosmos_Container_Name'))]",
      "location": "[parameters('resourcesLocation')]",
      "properties": {
        "resource": {
          "id": "[parameters('Cosmos_Container_Name')]",
          "partitionKey": {
            "paths": [
              "/user_id"
            ],
            "kind": "Hash",
            "version": 2
          },
          "defaultTtl": 1000
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('Cosmos_Account_Name'), parameters('Cosmos_Database_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Bing/accounts",
      "apiVersion": "2020-06-10",
      "name": "[parameters('Bing_Search_API_Name')]",
      "kind": "Bing.Search.v7",
      "location": "global",
      "sku": {
        "name": "S1"
      }
    }
  ]
}