{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "3736650606403293203"
    }
  },
  "parameters": {
    "MicrosoftAppId": {
      "type": "string",
      "metadata": {
        "description": "Required. Active Directory App ID."
      }
    },
    "MicrosoftAppPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Required. Active Directory App Secret Value."
      }
    },
    "DATASOURCE_SAS_TOKEN": {
      "type": "string",
      "defaultValue": "?sv=2022-11-02&ss=bf&srt=sco&sp=rltfx&se=2023-11-29T01:50:59Z&st=2023-05-10T16:50:59Z&spr=https&sig=ZT7MLy%2BnlvAxUKKj5v0RwoWObXaab3gO4ec2%2Fci6iL0%3D",
      "metadata": {
        "description": "Optional. The SAS token for the Azure Storage Account"
      }
    },
    "resourceGroupSearch": {
      "type": "string"
    },
    "Azure_Search_Name": {
      "type": "string"
    },
    "AZURE_SEARCH_API_VERSION": {
      "type": "string",
      "defaultValue": "2021-04-30-Preview",
      "metadata": {
        "description": "Optional. The API version for the Azure Search service."
      }
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "metadata": {
        "description": "Required. The endpoint of the Azure OpenAI service."
      }
    },
    "AZURE_OPENAI_API_KEY": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The API key for the Azure OpenAI service."
      }
    },
    "AZURE_OPENAI_MODEL_NAME": {
      "type": "string",
      "defaultValue": "gpt-4",
      "metadata": {
        "description": "Optional. The model name for the Azure OpenAI service."
      }
    },
    "AZURE_OPENAI_API_VERSION": {
      "type": "string",
      "defaultValue": "2023-03-15-preview",
      "metadata": {
        "description": "Optional. The API version for the Azure OpenAI service."
      }
    },
    "BING_SEARCH_URL": {
      "type": "string",
      "defaultValue": "https://api.bing.microsoft.com/v7.0/search",
      "metadata": {
        "description": "Optional. The URL for the Bing Search service."
      }
    },
    "BING_SUBSCRIPTION_KEY": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The subscription key for the Bing Search service."
      }
    },
    "SQL_SERVER_ENDPOINT": {
      "type": "string",
      "metadata": {
        "description": "Required. The endpoint of the SQL Server."
      }
    },
    "SQL_SERVER_DATABASE": {
      "type": "string",
      "defaultValue": "SampleDB",
      "metadata": {
        "description": "Required. The name of the SQL Server database."
      }
    },
    "SQL_SERVER_USERNAME": {
      "type": "string",
      "metadata": {
        "description": "Required. The username for the SQL Server."
      }
    },
    "SQL_SERVER_PASSWORD": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The password for the SQL Server."
      }
    },
    "AZURE_COSMOSDB_ENDPOINT": {
      "type": "string",
      "metadata": {
        "description": "Required. The endpoint of the Azure CosmosDB."
      }
    },
    "AZURE_COSMOSDB_NAME": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure CosmosDB."
      }
    },
    "AZURE_COSMOSDB_CONTAINER_NAME": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure CosmosDB container."
      }
    },
    "AZURE_COMOSDB_CONNECTION_STRING": {
      "type": "securestring",
      "metadata": {
        "description": "Required. The connection string of the Azure CosmosDB."
      }
    },
    "botId": {
      "type": "string",
      "defaultValue": "[format('BotId-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The globally unique and immutable bot ID. Also used to configure the displayName of the bot, which is mutable."
      }
    },
    "botSku": {
      "type": "string",
      "defaultValue": "F0",
      "allowedValues": [
        "F0",
        "S1"
      ],
      "metadata": {
        "description": "Optional, defaults to F0. The pricing tier of the Bot Service Registration. Acceptable values are F0 and S1."
      }
    },
    "newAppServicePlanName": {
      "type": "string",
      "defaultValue": "[format('AppServicePlan-Backend-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Optional. The name of the new App Service Plan."
      }
    },
    "newAppServicePlanSku": {
      "type": "string",
      "defaultValue": "S3",
      "allowedValues": [
        "B3",
        "S3",
        "P2v3"
      ],
      "metadata": {
        "description": "Optional, defaults to S3. The SKU of the App Service Plan. Acceptable values are B3, S3 and P2v3."
      }
    },
    "resourcesLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional, defaults to resource group location. The location of the resources."
      }
    }
  },
  "variables": {
    "servicePlanName": "[parameters('newAppServicePlanName')]",
    "publishingUsername": "[format('${0}', parameters('botId'))]",
    "webAppName": "[format('webApp-Backend-{0}', parameters('botId'))]",
    "siteHost": "[format('{0}.azurewebsites.net', variables('webAppName'))]",
    "botEndpoint": "[format('https://{0}/api/messages', variables('siteHost'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('servicePlanName')]",
      "location": "[parameters('resourcesLocation')]",
      "sku": {
        "name": "[parameters('newAppServicePlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('resourcesLocation')]",
      "kind": "app,linux",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[format('{0}.azurewebsites.net', variables('webAppName'))]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[format('{0}.scm.azurewebsites.net', variables('webAppName'))]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]",
        "reserved": true,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('MicrosoftAppId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('MicrosoftAppPassword')]"
            },
            {
              "name": "DATASOURCE_SAS_TOKEN",
              "value": "[parameters('DATASOURCE_SAS_TOKEN')]"
            },
            {
              "name": "AZURE_SEARCH_ENDPOINT",
              "value": "[format('https://{0}.search.windows.net', parameters('Azure_Search_Name'))]"
            },
            {
              "name": "AZURE_SEARCH_KEY",
              "value": "[listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupSearch')), 'Microsoft.Search/searchServices', parameters('Azure_Search_Name')), '2021-04-01-preview').keys[0].value]"
            },
            {
              "name": "AZURE_SEARCH_API_VERSION",
              "value": "[parameters('AZURE_SEARCH_API_VERSION')]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[parameters('AZURE_OPENAI_ENDPOINT')]"
            },
            {
              "name": "AZURE_OPENAI_API_KEY",
              "value": "[parameters('AZURE_OPENAI_API_KEY')]"
            },
            {
              "name": "AZURE_OPENAI_MODEL_NAME",
              "value": "[parameters('AZURE_OPENAI_MODEL_NAME')]"
            },
            {
              "name": "AZURE_OPENAI_API_VERSION",
              "value": "[parameters('AZURE_OPENAI_API_VERSION')]"
            },
            {
              "name": "BING_SEARCH_URL",
              "value": "[parameters('BING_SEARCH_URL')]"
            },
            {
              "name": "BING_SUBSCRIPTION_KEY",
              "value": "[parameters('BING_SUBSCRIPTION_KEY')]"
            },
            {
              "name": "SQL_SERVER_ENDPOINT",
              "value": "[parameters('SQL_SERVER_ENDPOINT')]"
            },
            {
              "name": "SQL_SERVER_DATABASE",
              "value": "[parameters('SQL_SERVER_DATABASE')]"
            },
            {
              "name": "SQL_SERVER_USERNAME",
              "value": "[parameters('SQL_SERVER_USERNAME')]"
            },
            {
              "name": "SQL_SERVER_PASSWORD",
              "value": "[parameters('SQL_SERVER_PASSWORD')]"
            },
            {
              "name": "AZURE_COSMOSDB_ENDPOINT",
              "value": "[parameters('AZURE_COSMOSDB_ENDPOINT')]"
            },
            {
              "name": "AZURE_COSMOSDB_NAME",
              "value": "[parameters('AZURE_COSMOSDB_NAME')]"
            },
            {
              "name": "AZURE_COSMOSDB_CONTAINER_NAME",
              "value": "[parameters('AZURE_COSMOSDB_CONTAINER_NAME')]"
            },
            {
              "name": "AZURE_COMOSDB_CONNECTION_STRING",
              "value": "[parameters('AZURE_COMOSDB_CONNECTION_STRING')]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://botservice.hosting.portal.azure.net",
              "https://hosting.onecloud.azure-test.net/"
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('servicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', variables('webAppName'), 'web')]",
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "PYTHON|3.10",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": true,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[variables('publishingUsername')]",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": true,
        "appCommandLine": "gunicorn --bind 0.0.0.0 --worker-class aiohttp.worker.GunicornWebWorker --timeout 600 app:APP",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "",
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2022-09-15",
      "name": "[parameters('botId')]",
      "location": "global",
      "kind": "azurebot",
      "sku": {
        "name": "[parameters('botSku')]"
      },
      "properties": {
        "displayName": "[parameters('botId')]",
        "iconUrl": "https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png",
        "endpoint": "[variables('botEndpoint')]",
        "msaAppId": "[parameters('MicrosoftAppId')]",
        "luisAppIds": [],
        "schemaTransformationVersion": "1.3",
        "isCmekEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
      ]
    }
  ]
}